apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: ci-postgres-
spec:
  # entrypoint is the name of the template used as the starting point of the workflow
  entrypoint: ci-postgres
  # the 'ci-postgres' template accepts an parameter 'revision', with a default of 'master'.
  # this can be overridden via argo CLI (e.g. `argo submit ci.yaml -p revision=0dea2d0`)
  arguments:
    parameters:
    - name: revision
      value: master

  templates:
  - name: ci-postgres
    inputs:
      parameters:
      - name: revision
    steps:
    - - name: build
        template: build-postgres
        arguments:
          parameters:
          - name: revision
            value: "{{inputs.parameters.revision}}"

  - name: build-postgres
    inputs:
      parameters:
      - name: revision
      artifacts:
      - name: code
        path: /postgres
        git:
          repo: https://github.com/docker-library/postgres.git
          revision: "{{inputs.parameters.revision}}"

    container:
      image: docker:18.09.4-dind
      command: [sh, -c]
      args: ["
        apk add git &&
        cd /postgres/12 &&
        git status &&
        time docker build .
      "]
      env:
        - name: DOCKER_HOST
          value: "127.0.0.1"
    sidecars:
      - name: dind
        image: docker:18.09.4-dind
        # mirrorVolumeMounts will mount the same volumes specified in the main container
        # to the sidecar (including artifacts), at the same mountPaths. This enables
        # dind daemon to (partially) see the same filesystem as the main container in
        # order to use features such as docker volume binding.
        mirrorVolumeMounts: true
        securityContext:
          privileged: true
        resources:
          limits:
            memory: 32Gi
            cpu: 8
          requests:
            memory: 32Gi
            cpu: 8
